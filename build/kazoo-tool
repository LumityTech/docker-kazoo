#!/bin/bash -l

: ${ERLANG_COOKIE:=insecure-cookie}


function ping {
    $ERTS_DIR/bin/escript ~/bin/nodetool -name $ERLANG_VM -setcookie $ERLANG_COOKIE ping > /dev/null
}

function remote_console {
    if ping > /dev/null; then
        local rem_name="remsh$(date +%s)-$ERLANG_VM"
        local ntt=$($ERTS_DIR/bin/escript ~/bin/nodetool -name $ERLANG_VM -setcookie $ERLANG_COOKIE rpcterms net_kernel get_net_ticktime)
        exec $ERTS_DIR/bin/erl -name $rem_name -remsh $ERLANG_VM -boot ~/bin/start_clean -setcookie $ERLANG_COOKIE -hidden -kernel net_ticktime $ntt
    fi
}

function upgrade {
    local file=$1
    local package="${file%%.tar.gz}"
    [[ ! -f $file ]] && log::m-warn "No file @ $file" && return 1
    log::m-info "initiating upgrade using package: $package"
    ping && exec $ERTS_DIR/bin/escript ~/bin/install_upgrade.escript install kazoo -name $ERLANG_VM $ERLANG_COOKIE "$package"
}

function escript {
    local script="$1"
    [[ ! -f $script ]] && log::m-warn "No file @ $script" && return 1
    ping && exec $ERTS_DIR/bin/escript "$script"
}

function rpc {
    local args="$@"
    [[ -z $args ]] && log::m-warn "${FUNCNAME}: Usage: $0 $FUNCNAME Module Func Args" && return 1
    ping && exec $ERTS_DIR/bin/escript ~/bin/nodetool -name $ERLANG_VM -setcookie $ERLANG_COOKIE rpc $@
}

# kazootool rpcterms kazoo_maintenance etop
function rpcterms {
    local args="$@"
    [[ -z $args ]] && log::m-warn "${FUNCNAME}: Usage: $0 $FUNCNAME Module Func Args" && return 1
    ping && exec $ERTS_DIR/bin/escript ~/bin/nodetool -name $ERLANG_VM -setcookie $ERLANG_COOKIE rpcterms $@
}

# kazootool eval 'kazoo_maintenance:etop()'
function eval {
    local args="$@"
    [[ -z $args ]] && log::m-warn "${FUNCNAME}: Usage: $0 $FUNCNAME Module Func Args" && return 1
    ping && exec $ERTS_DIR/bin/escript ~/bin/nodetool -name $ERLANG_VM -setcookie $ERLANG_COOKIE eval $@
}


if [[ $1 ]]; then
    "$@"
else
    echo "usage: $(basename $0) {ping|remote_console|upgrade <package-base-name>|escript <escript-path>|rpc <args>|rpcterms <args>|eval <args>}"
    exit 1
fi
