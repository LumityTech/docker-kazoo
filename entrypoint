#!/bin/bash

set -e

. ~/.bashrc

: ${KAZOO_APP:=whistle_apps}

: ${KAZOO_THREADS:=25}

# options: debug info notice warning error critical alert emergency
: ${KAZOO_LOG_LEVEL:=info}
: ${KAZOO_LOG_COLOR:=true}

# options: error progress all
: ${KAZOO_SASL_ERRLOG_TYPE:=error}
: ${KAZOO_SASL_ERROR_LOGGER:=tty}

: ${DATACENTER:=dev}
: ${REGION:=local}
: ${KAZOO_ZONE:=${REGION}-${DATACENTER}}

: ${BIGCOUCH_COMPACT_AUTOMATICALLY:=true}
: ${BIGCOUCH_DATA_PORT:=5984}
: ${BIGCOUCH_ADMIN_PORT:=5986}


if [ "$KUBERNETES_HOSTNAME_FIX" == true ]; then
    echo "Applying kubernetes hostname fix ..."

    if [ -z "$(cat /etc/hosts | grep $HOSTNAME)" ]; then
        echo "127.0.0.1    $(hostname -f)    $(hostname)" >> /etc/hosts
        echo "::1    $(hostname -f)    $(hostname)" >> /etc/hosts
        echo "$(hostname -i | head -n 1)    $(hostname -f)    $(hostname)" >> /etc/hosts
    fi

    echo "$HOSTNAME" > /etc/hostname

    echo -e "
    HOSTNAME: $HOSTNAME
    which: $(which hostname)
    Container IP: $(hostname -i)
    Container Host: $(hostname)
    Container FQDN: $(hostname -f)
    "
fi


echo "Setting environment specific services ..."
if [ "$ENVIRONMENT" == "local" ]; then
    AMQP_URI="amqp://guest:guest@$(dig +short rabbitmq | head -n 1):5672"
    BIGCOUCH_IP=$(dig +short bigcouch.local | head -n 1)
else
    AMQP_URI="amqp://guest:guest@$(dig +short +search rabbitmq):5672"
    BIGCOUCH_IP=$(dig +short +search bigcouchbal)
fi


echo "Reading erlang cookie ..."
if [ -f '/etc/secrets/erlang/cookie' ]; then
    echo "Cookie secret mounted ..."
    ERLANG_COOKIE=$(cat /etc/secrets/erlang/cookie)
else
    echo "*** No Erlang Cookie Mounted! ***"
    ERLANG_COOKIE=insecure-cookie
fi
echo "$ERLANG_COOKIE" > ~/.erlang.cookie


echo "Creating erl_pipes ..."
mkdir -p /tmp/erl_pipes/$KAZOO_APP


echo "Removing file based loggers since we're in docker ..."
tee /etc/kazoo/app.config <<EOF
[
 {lager, [
          {handlers, [
                      {lager_console_backend, info}
                     ]},
          {colored, ${KAZOO_LOG_COLOR}}
         ,{error_logger_hwm, 500}
         ]}
].
EOF


echo "Configuring vm.args ..."
tee /etc/kazoo/vm.args <<EOF
# Tell SASL not to log progress reports, and log SASL errors to a file
-sasl errlog_type $KAZOO_SASL_ERRLOG_TYPE
-sasl sasl_error_logger $KAZOO_SASL_ERROR_LOGGER
-boot start_sasl

-config /etc/kazoo/app.config

# Use kernel poll functionality if supported by emulator
+K true

# Start a pool of asynchronous IO threads
+A $KAZOO_THREADS

-kernel inet_dist_listen_min 11500 inet_dist_listen_max 11999

# Comment this line out if you want the Erlang shell
+Bd

# Treat error_logger:warning_msg/2 as warnings instead of errors (default)
+W w
EOF


echo "Writing kazoo config.ini ..."
tee  /etc/kazoo/config.ini <<EOF
[zone]
name = "$KAZOO_ZONE"
amqp_uri = "$AMQP_URI"

[bigcouch]
compact_automatically = $BIGCOUCH_COMPACT_AUTOMATICALLY
ip = "$BIGCOUCH_IP"
port = $BIGCOUCH_DATA_PORT
admin_port = $BIGCOUCH_ADMIN_PORT
zone = "$KAZOO_ZONE"
cookie = $ERLANG_COOKIE

[whistle_apps]
zone = "$KAZOO_ZONE"
cookie = $ERLANG_COOKIE

[ecallmgr]
zone = "$KAZOO_ZONE"
cookie = $ERLANG_COOKIE

[log]
console = $KAZOO_LOG_LEVEL
EOF


echo "Ensuring permissions ..."
chown -R kazoo:kazoo ~ /etc/kazoo
chown -R kazoo:kazoo /tmp/erl_pipes/$KAZOO_APP
chown kazoo:kazoo ~/.erlang.cookie
chmod 0600 ~/.erlang.cookie


echo "Starting $KAZOO_APP using node: $KAZOO_APP@$(env hostname -f)"
export ERL_CRASH_DUMP=$(date +%s)_${KAZOO_APP}_erl_crash.dump
export ERL_LIBS=${HOME}/deps:${HOME}/core:${HOME}/applications:$ERL_LIBS

cd ~ 
    su kazoo -c "exec erl -name ${KAZOO_APP}@$(env hostname -f) -args_file /etc/kazoo/vm.args -noshell -s $KAZOO_APP 2>&1"
